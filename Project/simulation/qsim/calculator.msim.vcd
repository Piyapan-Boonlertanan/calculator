$comment
	File created using the following command:
		vcd file calculator.msim.vcd -direction
$end
$date
	Sun Nov 13 17:41:02 2022
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module calculator_vhd_vec_tst $end
$var wire 1 ! A [4] $end
$var wire 1 " A [3] $end
$var wire 1 # A [2] $end
$var wire 1 $ A [1] $end
$var wire 1 % A [0] $end
$var wire 1 & B [4] $end
$var wire 1 ' B [3] $end
$var wire 1 ( B [2] $end
$var wire 1 ) B [1] $end
$var wire 1 * B [0] $end
$var wire 1 + CLK $end
$var wire 1 , Done $end
$var wire 1 - Operation [1] $end
$var wire 1 . Operation [0] $end
$var wire 1 / Remainder [9] $end
$var wire 1 0 Remainder [8] $end
$var wire 1 1 Remainder [7] $end
$var wire 1 2 Remainder [6] $end
$var wire 1 3 Remainder [5] $end
$var wire 1 4 Remainder [4] $end
$var wire 1 5 Remainder [3] $end
$var wire 1 6 Remainder [2] $end
$var wire 1 7 Remainder [1] $end
$var wire 1 8 Remainder [0] $end
$var wire 1 9 Result [9] $end
$var wire 1 : Result [8] $end
$var wire 1 ; Result [7] $end
$var wire 1 < Result [6] $end
$var wire 1 = Result [5] $end
$var wire 1 > Result [4] $end
$var wire 1 ? Result [3] $end
$var wire 1 @ Result [2] $end
$var wire 1 A Result [1] $end
$var wire 1 B Result [0] $end
$var wire 1 C RST_N $end
$var wire 1 D Start $end

$scope module i1 $end
$var wire 1 E gnd $end
$var wire 1 F vcc $end
$var wire 1 G unknown $end
$var wire 1 H devoe $end
$var wire 1 I devclrn $end
$var wire 1 J devpor $end
$var wire 1 K ww_devoe $end
$var wire 1 L ww_devclrn $end
$var wire 1 M ww_devpor $end
$var wire 1 N ww_CLK $end
$var wire 1 O ww_RST_N $end
$var wire 1 P ww_Start $end
$var wire 1 Q ww_Operation [1] $end
$var wire 1 R ww_Operation [0] $end
$var wire 1 S ww_A [4] $end
$var wire 1 T ww_A [3] $end
$var wire 1 U ww_A [2] $end
$var wire 1 V ww_A [1] $end
$var wire 1 W ww_A [0] $end
$var wire 1 X ww_B [4] $end
$var wire 1 Y ww_B [3] $end
$var wire 1 Z ww_B [2] $end
$var wire 1 [ ww_B [1] $end
$var wire 1 \ ww_B [0] $end
$var wire 1 ] ww_Result [9] $end
$var wire 1 ^ ww_Result [8] $end
$var wire 1 _ ww_Result [7] $end
$var wire 1 ` ww_Result [6] $end
$var wire 1 a ww_Result [5] $end
$var wire 1 b ww_Result [4] $end
$var wire 1 c ww_Result [3] $end
$var wire 1 d ww_Result [2] $end
$var wire 1 e ww_Result [1] $end
$var wire 1 f ww_Result [0] $end
$var wire 1 g ww_Remainder [9] $end
$var wire 1 h ww_Remainder [8] $end
$var wire 1 i ww_Remainder [7] $end
$var wire 1 j ww_Remainder [6] $end
$var wire 1 k ww_Remainder [5] $end
$var wire 1 l ww_Remainder [4] $end
$var wire 1 m ww_Remainder [3] $end
$var wire 1 n ww_Remainder [2] $end
$var wire 1 o ww_Remainder [1] $end
$var wire 1 p ww_Remainder [0] $end
$var wire 1 q ww_Done $end
$var wire 1 r \Operation[0]~input_o\ $end
$var wire 1 s \Operation[1]~input_o\ $end
$var wire 1 t \Result[0]~output_o\ $end
$var wire 1 u \Result[1]~output_o\ $end
$var wire 1 v \Result[2]~output_o\ $end
$var wire 1 w \Result[3]~output_o\ $end
$var wire 1 x \Result[4]~output_o\ $end
$var wire 1 y \Result[5]~output_o\ $end
$var wire 1 z \Result[6]~output_o\ $end
$var wire 1 { \Result[7]~output_o\ $end
$var wire 1 | \Result[8]~output_o\ $end
$var wire 1 } \Result[9]~output_o\ $end
$var wire 1 ~ \Remainder[0]~output_o\ $end
$var wire 1 !! \Remainder[1]~output_o\ $end
$var wire 1 "! \Remainder[2]~output_o\ $end
$var wire 1 #! \Remainder[3]~output_o\ $end
$var wire 1 $! \Remainder[4]~output_o\ $end
$var wire 1 %! \Remainder[5]~output_o\ $end
$var wire 1 &! \Remainder[6]~output_o\ $end
$var wire 1 '! \Remainder[7]~output_o\ $end
$var wire 1 (! \Remainder[8]~output_o\ $end
$var wire 1 )! \Remainder[9]~output_o\ $end
$var wire 1 *! \Done~output_o\ $end
$var wire 1 +! \CLK~input_o\ $end
$var wire 1 ,! \Start~input_o\ $end
$var wire 1 -! \A[0]~input_o\ $end
$var wire 1 .! \multiplication|Data_A~0_combout\ $end
$var wire 1 /! \RST_N~input_o\ $end
$var wire 1 0! \multiplication|Add1~125_sumout\ $end
$var wire 1 1! \multiplication|bit_counter[0]~0_combout\ $end
$var wire 1 2! \multiplication|Add1~126\ $end
$var wire 1 3! \multiplication|Add1~81_sumout\ $end
$var wire 1 4! \multiplication|Add1~82\ $end
$var wire 1 5! \multiplication|Add1~77_sumout\ $end
$var wire 1 6! \multiplication|Add1~78\ $end
$var wire 1 7! \multiplication|Add1~25_sumout\ $end
$var wire 1 8! \multiplication|Add1~26\ $end
$var wire 1 9! \multiplication|Add1~21_sumout\ $end
$var wire 1 :! \multiplication|Add1~22\ $end
$var wire 1 ;! \multiplication|Add1~17_sumout\ $end
$var wire 1 <! \multiplication|Add1~18\ $end
$var wire 1 =! \multiplication|Add1~13_sumout\ $end
$var wire 1 >! \multiplication|Add1~14\ $end
$var wire 1 ?! \multiplication|Add1~9_sumout\ $end
$var wire 1 @! \multiplication|Add1~10\ $end
$var wire 1 A! \multiplication|Add1~5_sumout\ $end
$var wire 1 B! \multiplication|Add1~6\ $end
$var wire 1 C! \multiplication|Add1~49_sumout\ $end
$var wire 1 D! \multiplication|Add1~50\ $end
$var wire 1 E! \multiplication|Add1~45_sumout\ $end
$var wire 1 F! \multiplication|Add1~46\ $end
$var wire 1 G! \multiplication|Add1~41_sumout\ $end
$var wire 1 H! \multiplication|Add1~42\ $end
$var wire 1 I! \multiplication|Add1~37_sumout\ $end
$var wire 1 J! \multiplication|Add1~38\ $end
$var wire 1 K! \multiplication|Add1~33_sumout\ $end
$var wire 1 L! \multiplication|Add1~34\ $end
$var wire 1 M! \multiplication|Add1~29_sumout\ $end
$var wire 1 N! \multiplication|Add1~30\ $end
$var wire 1 O! \multiplication|Add1~73_sumout\ $end
$var wire 1 P! \multiplication|Add1~74\ $end
$var wire 1 Q! \multiplication|Add1~69_sumout\ $end
$var wire 1 R! \multiplication|Add1~70\ $end
$var wire 1 S! \multiplication|Add1~65_sumout\ $end
$var wire 1 T! \multiplication|Add1~66\ $end
$var wire 1 U! \multiplication|Add1~61_sumout\ $end
$var wire 1 V! \multiplication|Add1~62\ $end
$var wire 1 W! \multiplication|Add1~57_sumout\ $end
$var wire 1 X! \multiplication|Add1~58\ $end
$var wire 1 Y! \multiplication|Add1~101_sumout\ $end
$var wire 1 Z! \multiplication|Add1~102\ $end
$var wire 1 [! \multiplication|Add1~53_sumout\ $end
$var wire 1 \! \multiplication|Add1~54\ $end
$var wire 1 ]! \multiplication|Add1~121_sumout\ $end
$var wire 1 ^! \multiplication|Add1~122\ $end
$var wire 1 _! \multiplication|Add1~117_sumout\ $end
$var wire 1 `! \multiplication|Add1~118\ $end
$var wire 1 a! \multiplication|Add1~113_sumout\ $end
$var wire 1 b! \multiplication|Add1~114\ $end
$var wire 1 c! \multiplication|Add1~109_sumout\ $end
$var wire 1 d! \multiplication|Add1~110\ $end
$var wire 1 e! \multiplication|Add1~105_sumout\ $end
$var wire 1 f! \multiplication|Add1~106\ $end
$var wire 1 g! \multiplication|Add1~85_sumout\ $end
$var wire 1 h! \multiplication|Add1~86\ $end
$var wire 1 i! \multiplication|Add1~97_sumout\ $end
$var wire 1 j! \multiplication|Add1~98\ $end
$var wire 1 k! \multiplication|Add1~93_sumout\ $end
$var wire 1 l! \multiplication|Add1~94\ $end
$var wire 1 m! \multiplication|Add1~89_sumout\ $end
$var wire 1 n! \multiplication|Add1~90\ $end
$var wire 1 o! \multiplication|Add1~1_sumout\ $end
$var wire 1 p! \multiplication|LessThan0~0_combout\ $end
$var wire 1 q! \multiplication|LessThan0~1_combout\ $end
$var wire 1 r! \multiplication|LessThan0~2_combout\ $end
$var wire 1 s! \multiplication|LessThan0~3_combout\ $end
$var wire 1 t! \multiplication|LessThan0~4_combout\ $end
$var wire 1 u! \multiplication|LessThan0~5_combout\ $end
$var wire 1 v! \multiplication|DONE~1_combout\ $end
$var wire 1 w! \multiplication|state~q\ $end
$var wire 1 x! \multiplication|Add0~1_sumout\ $end
$var wire 1 y! \B[4]~input_o\ $end
$var wire 1 z! \multiplication|Data_B~0_combout\ $end
$var wire 1 {! \multiplication|Data_B~1_combout\ $end
$var wire 1 |! \B[0]~input_o\ $end
$var wire 1 }! \multiplication|Data_B~2_combout\ $end
$var wire 1 ~! \B[1]~input_o\ $end
$var wire 1 !" \multiplication|Data_B~3_combout\ $end
$var wire 1 "" \B[2]~input_o\ $end
$var wire 1 #" \multiplication|Data_B~4_combout\ $end
$var wire 1 $" \B[3]~input_o\ $end
$var wire 1 %" \multiplication|Data_B~5_combout\ $end
$var wire 1 &" \multiplication|Mux0~0_combout\ $end
$var wire 1 '" \multiplication|Data_Product[0]~0_combout\ $end
$var wire 1 (" \multiplication|R[9]~0_combout\ $end
$var wire 1 )" \A[1]~input_o\ $end
$var wire 1 *" \multiplication|Data_A~1_combout\ $end
$var wire 1 +" \multiplication|Data_A[4]~2_combout\ $end
$var wire 1 ," \multiplication|Add0~2\ $end
$var wire 1 -" \multiplication|Add0~5_sumout\ $end
$var wire 1 ." \A[2]~input_o\ $end
$var wire 1 /" \multiplication|Data_A~3_combout\ $end
$var wire 1 0" \multiplication|Add0~6\ $end
$var wire 1 1" \multiplication|Add0~9_sumout\ $end
$var wire 1 2" \A[3]~input_o\ $end
$var wire 1 3" \multiplication|Data_A~4_combout\ $end
$var wire 1 4" \multiplication|Add0~10\ $end
$var wire 1 5" \multiplication|Add0~13_sumout\ $end
$var wire 1 6" \A[4]~input_o\ $end
$var wire 1 7" \multiplication|Data_A~5_combout\ $end
$var wire 1 8" \multiplication|Add0~14\ $end
$var wire 1 9" \multiplication|Add0~17_sumout\ $end
$var wire 1 :" \multiplication|Add0~18\ $end
$var wire 1 ;" \multiplication|Add0~21_sumout\ $end
$var wire 1 <" \multiplication|Add0~22\ $end
$var wire 1 =" \multiplication|Add0~25_sumout\ $end
$var wire 1 >" \multiplication|Add0~26\ $end
$var wire 1 ?" \multiplication|Add0~29_sumout\ $end
$var wire 1 @" \multiplication|Add0~30\ $end
$var wire 1 A" \multiplication|Add0~33_sumout\ $end
$var wire 1 B" \multiplication|Add0~34\ $end
$var wire 1 C" \multiplication|Add0~37_sumout\ $end
$var wire 1 D" \multiplication|DONE~0_combout\ $end
$var wire 1 E" \multiplication|DONE~q\ $end
$var wire 1 F" \multiplication|Data_Product\ [9] $end
$var wire 1 G" \multiplication|Data_Product\ [8] $end
$var wire 1 H" \multiplication|Data_Product\ [7] $end
$var wire 1 I" \multiplication|Data_Product\ [6] $end
$var wire 1 J" \multiplication|Data_Product\ [5] $end
$var wire 1 K" \multiplication|Data_Product\ [4] $end
$var wire 1 L" \multiplication|Data_Product\ [3] $end
$var wire 1 M" \multiplication|Data_Product\ [2] $end
$var wire 1 N" \multiplication|Data_Product\ [1] $end
$var wire 1 O" \multiplication|Data_Product\ [0] $end
$var wire 1 P" \multiplication|bit_counter\ [31] $end
$var wire 1 Q" \multiplication|bit_counter\ [30] $end
$var wire 1 R" \multiplication|bit_counter\ [29] $end
$var wire 1 S" \multiplication|bit_counter\ [28] $end
$var wire 1 T" \multiplication|bit_counter\ [27] $end
$var wire 1 U" \multiplication|bit_counter\ [26] $end
$var wire 1 V" \multiplication|bit_counter\ [25] $end
$var wire 1 W" \multiplication|bit_counter\ [24] $end
$var wire 1 X" \multiplication|bit_counter\ [23] $end
$var wire 1 Y" \multiplication|bit_counter\ [22] $end
$var wire 1 Z" \multiplication|bit_counter\ [21] $end
$var wire 1 [" \multiplication|bit_counter\ [20] $end
$var wire 1 \" \multiplication|bit_counter\ [19] $end
$var wire 1 ]" \multiplication|bit_counter\ [18] $end
$var wire 1 ^" \multiplication|bit_counter\ [17] $end
$var wire 1 _" \multiplication|bit_counter\ [16] $end
$var wire 1 `" \multiplication|bit_counter\ [15] $end
$var wire 1 a" \multiplication|bit_counter\ [14] $end
$var wire 1 b" \multiplication|bit_counter\ [13] $end
$var wire 1 c" \multiplication|bit_counter\ [12] $end
$var wire 1 d" \multiplication|bit_counter\ [11] $end
$var wire 1 e" \multiplication|bit_counter\ [10] $end
$var wire 1 f" \multiplication|bit_counter\ [9] $end
$var wire 1 g" \multiplication|bit_counter\ [8] $end
$var wire 1 h" \multiplication|bit_counter\ [7] $end
$var wire 1 i" \multiplication|bit_counter\ [6] $end
$var wire 1 j" \multiplication|bit_counter\ [5] $end
$var wire 1 k" \multiplication|bit_counter\ [4] $end
$var wire 1 l" \multiplication|bit_counter\ [3] $end
$var wire 1 m" \multiplication|bit_counter\ [2] $end
$var wire 1 n" \multiplication|bit_counter\ [1] $end
$var wire 1 o" \multiplication|bit_counter\ [0] $end
$var wire 1 p" \multiplication|Data_A\ [9] $end
$var wire 1 q" \multiplication|Data_A\ [8] $end
$var wire 1 r" \multiplication|Data_A\ [7] $end
$var wire 1 s" \multiplication|Data_A\ [6] $end
$var wire 1 t" \multiplication|Data_A\ [5] $end
$var wire 1 u" \multiplication|Data_A\ [4] $end
$var wire 1 v" \multiplication|Data_A\ [3] $end
$var wire 1 w" \multiplication|Data_A\ [2] $end
$var wire 1 x" \multiplication|Data_A\ [1] $end
$var wire 1 y" \multiplication|Data_A\ [0] $end
$var wire 1 z" \multiplication|R\ [9] $end
$var wire 1 {" \multiplication|R\ [8] $end
$var wire 1 |" \multiplication|R\ [7] $end
$var wire 1 }" \multiplication|R\ [6] $end
$var wire 1 ~" \multiplication|R\ [5] $end
$var wire 1 !# \multiplication|R\ [4] $end
$var wire 1 "# \multiplication|R\ [3] $end
$var wire 1 ## \multiplication|R\ [2] $end
$var wire 1 $# \multiplication|R\ [1] $end
$var wire 1 %# \multiplication|R\ [0] $end
$var wire 1 &# \multiplication|Data_B\ [4] $end
$var wire 1 '# \multiplication|Data_B\ [3] $end
$var wire 1 (# \multiplication|Data_B\ [2] $end
$var wire 1 )# \multiplication|Data_B\ [1] $end
$var wire 1 *# \multiplication|Data_B\ [0] $end
$var wire 1 +# \multiplication|ALT_INV_bit_counter\ [31] $end
$var wire 1 ,# \multiplication|ALT_INV_bit_counter\ [30] $end
$var wire 1 -# \multiplication|ALT_INV_bit_counter\ [29] $end
$var wire 1 .# \multiplication|ALT_INV_bit_counter\ [28] $end
$var wire 1 /# \multiplication|ALT_INV_bit_counter\ [27] $end
$var wire 1 0# \multiplication|ALT_INV_bit_counter\ [26] $end
$var wire 1 1# \multiplication|ALT_INV_bit_counter\ [25] $end
$var wire 1 2# \multiplication|ALT_INV_bit_counter\ [24] $end
$var wire 1 3# \multiplication|ALT_INV_bit_counter\ [23] $end
$var wire 1 4# \multiplication|ALT_INV_bit_counter\ [22] $end
$var wire 1 5# \multiplication|ALT_INV_bit_counter\ [21] $end
$var wire 1 6# \multiplication|ALT_INV_bit_counter\ [20] $end
$var wire 1 7# \multiplication|ALT_INV_bit_counter\ [19] $end
$var wire 1 8# \multiplication|ALT_INV_bit_counter\ [18] $end
$var wire 1 9# \multiplication|ALT_INV_bit_counter\ [17] $end
$var wire 1 :# \multiplication|ALT_INV_bit_counter\ [16] $end
$var wire 1 ;# \multiplication|ALT_INV_bit_counter\ [15] $end
$var wire 1 <# \multiplication|ALT_INV_bit_counter\ [14] $end
$var wire 1 =# \multiplication|ALT_INV_bit_counter\ [13] $end
$var wire 1 ># \multiplication|ALT_INV_bit_counter\ [12] $end
$var wire 1 ?# \multiplication|ALT_INV_bit_counter\ [11] $end
$var wire 1 @# \multiplication|ALT_INV_bit_counter\ [10] $end
$var wire 1 A# \multiplication|ALT_INV_bit_counter\ [9] $end
$var wire 1 B# \multiplication|ALT_INV_bit_counter\ [8] $end
$var wire 1 C# \multiplication|ALT_INV_bit_counter\ [7] $end
$var wire 1 D# \multiplication|ALT_INV_bit_counter\ [6] $end
$var wire 1 E# \multiplication|ALT_INV_bit_counter\ [5] $end
$var wire 1 F# \multiplication|ALT_INV_bit_counter\ [4] $end
$var wire 1 G# \multiplication|ALT_INV_bit_counter\ [3] $end
$var wire 1 H# \multiplication|ALT_INV_bit_counter\ [2] $end
$var wire 1 I# \multiplication|ALT_INV_bit_counter\ [1] $end
$var wire 1 J# \multiplication|ALT_INV_bit_counter\ [0] $end
$var wire 1 K# \multiplication|ALT_INV_Data_Product\ [9] $end
$var wire 1 L# \multiplication|ALT_INV_Data_Product\ [8] $end
$var wire 1 M# \multiplication|ALT_INV_Data_Product\ [7] $end
$var wire 1 N# \multiplication|ALT_INV_Data_Product\ [6] $end
$var wire 1 O# \multiplication|ALT_INV_Data_Product\ [5] $end
$var wire 1 P# \multiplication|ALT_INV_Data_Product\ [4] $end
$var wire 1 Q# \multiplication|ALT_INV_Data_Product\ [3] $end
$var wire 1 R# \multiplication|ALT_INV_Data_Product\ [2] $end
$var wire 1 S# \multiplication|ALT_INV_Data_Product\ [1] $end
$var wire 1 T# \multiplication|ALT_INV_Data_Product\ [0] $end
$var wire 1 U# \ALT_INV_A[4]~input_o\ $end
$var wire 1 V# \ALT_INV_A[3]~input_o\ $end
$var wire 1 W# \ALT_INV_A[2]~input_o\ $end
$var wire 1 X# \ALT_INV_A[1]~input_o\ $end
$var wire 1 Y# \ALT_INV_A[0]~input_o\ $end
$var wire 1 Z# \ALT_INV_B[3]~input_o\ $end
$var wire 1 [# \ALT_INV_B[2]~input_o\ $end
$var wire 1 \# \ALT_INV_B[1]~input_o\ $end
$var wire 1 ]# \ALT_INV_B[0]~input_o\ $end
$var wire 1 ^# \ALT_INV_B[4]~input_o\ $end
$var wire 1 _# \ALT_INV_Start~input_o\ $end
$var wire 1 `# \ALT_INV_RST_N~input_o\ $end
$var wire 1 a# \multiplication|ALT_INV_Data_A\ [9] $end
$var wire 1 b# \multiplication|ALT_INV_Data_A\ [8] $end
$var wire 1 c# \multiplication|ALT_INV_Data_A\ [7] $end
$var wire 1 d# \multiplication|ALT_INV_Data_A\ [6] $end
$var wire 1 e# \multiplication|ALT_INV_Data_A\ [5] $end
$var wire 1 f# \multiplication|ALT_INV_Data_A\ [4] $end
$var wire 1 g# \multiplication|ALT_INV_Data_A\ [3] $end
$var wire 1 h# \multiplication|ALT_INV_Data_A\ [2] $end
$var wire 1 i# \multiplication|ALT_INV_Data_A\ [1] $end
$var wire 1 j# \multiplication|ALT_INV_Data_A\ [0] $end
$var wire 1 k# \multiplication|ALT_INV_Mux0~0_combout\ $end
$var wire 1 l# \multiplication|ALT_INV_Data_B\ [4] $end
$var wire 1 m# \multiplication|ALT_INV_Data_B\ [3] $end
$var wire 1 n# \multiplication|ALT_INV_Data_B\ [2] $end
$var wire 1 o# \multiplication|ALT_INV_Data_B\ [1] $end
$var wire 1 p# \multiplication|ALT_INV_Data_B\ [0] $end
$var wire 1 q# \multiplication|ALT_INV_LessThan0~5_combout\ $end
$var wire 1 r# \multiplication|ALT_INV_LessThan0~4_combout\ $end
$var wire 1 s# \multiplication|ALT_INV_LessThan0~3_combout\ $end
$var wire 1 t# \multiplication|ALT_INV_LessThan0~2_combout\ $end
$var wire 1 u# \multiplication|ALT_INV_LessThan0~1_combout\ $end
$var wire 1 v# \multiplication|ALT_INV_LessThan0~0_combout\ $end
$var wire 1 w# \multiplication|ALT_INV_state~q\ $end
$var wire 1 x# \multiplication|ALT_INV_DONE~q\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0+
0,
0C
1D
0E
1F
xG
1H
1I
1J
1K
1L
1M
0N
0O
1P
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
1,!
1-!
1.!
0/!
10!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
1p!
1q!
1r!
1s!
1t!
0u!
1v!
0w!
0x!
0y!
0z!
1{!
1|!
1}!
0~!
0!"
1""
1#"
0$"
0%"
1&"
0'"
0("
0)"
0*"
1+"
0,"
0-"
1."
1/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
1U#
1V#
0W#
1X#
0Y#
1Z#
0[#
1\#
0]#
1^#
0_#
1`#
0k#
1q#
0r#
0s#
0t#
0u#
0v#
1w#
1x#
0!
0"
1#
0$
1%
0&
0'
1(
0)
1*
0-
0.
0Q
0R
0S
0T
1U
0V
1W
0X
0Y
1Z
0[
1\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
1+#
1,#
1-#
1.#
1/#
10#
11#
12#
13#
14#
15#
16#
17#
18#
19#
1:#
1;#
1<#
1=#
1>#
1?#
1@#
1A#
1B#
1C#
1D#
1E#
1F#
1G#
1H#
1I#
1J#
1K#
1L#
1M#
1N#
1O#
1P#
1Q#
1R#
1S#
1T#
1a#
1b#
1c#
1d#
1e#
1f#
1g#
1h#
1i#
1j#
1l#
1m#
1n#
1o#
1p#
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
$end
#10000
1+
1N
1+!
1w!
1y"
1*#
1(#
1w"
0h#
0n#
0p#
0j#
0w#
11!
0{!
0}!
0#"
1("
0/"
1x!
1*"
0&"
11"
13"
1k#
1'"
#20000
0+
0N
0+!
#30000
1+
0D
1N
0P
0,!
1+!
1_#
1o"
0y"
1O"
1x"
0w"
1M"
1v"
0g#
0R#
1h#
0i#
0T#
1j#
0J#
00!
12!
1&"
0.!
0*"
1-"
1/"
03"
15"
17"
0k#
13!
0'"
#40000
0+
0N
0+!
#50000
1+
1N
1+!
0o"
1n"
1%#
0x"
1w"
1##
0v"
1u"
0f#
1g#
0h#
1i#
0I#
1J#
10!
02!
03!
14!
0&"
0-"
0/"
01"
14"
13"
05"
07"
19"
1k#
1v
1t
15"
15!
13!
04!
1'"
1d
1f
05!
1B
1@
#60000
0+
0N
0+!
#70000
1+
1N
1+!
1o"
0w"
0M"
1v"
1L"
0u"
1K"
1t"
0e#
0P#
1f#
0Q#
0g#
1R#
1h#
0J#
00!
12!
1&"
03"
04"
17"
18"
1;"
0k#
09"
1:"
05"
03!
14!
0'"
15!
0;"
1<"
1="
#80000
0+
0N
0+!
#90000
1+
1N
1+!
0o"
0n"
1m"
0##
0v"
1"#
1u"
1!#
0t"
1s"
0d#
1e#
0f#
1g#
0H#
1I#
1J#
10!
02!
13!
04!
0&"
05!
16!
15"
08"
07"
19"
1;"
0<"
0="
1>"
1k#
1x
1w
0v
1?"
1="
0>"
09"
17!
15!
06!
03!
1b
1c
0d
07!
0?"
0@
1?
1>
#100000
0+
0N
0+!
#110000
1+
1N
1+!
1o"
0u"
1t"
0s"
1r"
0c#
1d#
0e#
1f#
0J#
00!
12!
1&"
19"
0:"
0;"
1<"
0="
1?"
0k#
1="
1;"
0<"
13!
0="
#120000
0+
0N
0+!
#130000
1+
1N
1+!
0o"
1n"
0t"
1s"
0r"
1q"
0b#
1c#
0d#
1e#
0I#
1J#
10!
02!
03!
14!
0s!
0&"
0;"
1="
0?"
1A"
1k#
1s#
05!
16!
13!
04!
1u!
15!
06!
17!
0q#
0v!
1{!
1'"
0("
1D"
07!
#140000
0+
0N
0+!
#150000
1+
1N
1+!
0n"
0m"
0w!
0*#
0(#
0O"
0L"
0K"
0s"
0q"
1E"
0x#
1b#
1d#
1P#
1Q#
1T#
1n#
1p#
1w#
1H#
1I#
03!
05!
1s!
01!
0{!
1}!
1#"
0'"
0+"
1/"
1&"
0x!
05"
09"
0="
0A"
0D"
0k#
0s#
1*!
0u!
1q
1q#
1,
#160000
0+
0N
0+!
#170000
1+
1N
1+!
0E"
1x#
0*!
0q
0,
#180000
0+
0N
0+!
#190000
1+
1N
1+!
#200000
0+
0N
0+!
#210000
1+
1N
1+!
#220000
0+
0N
0+!
#230000
1+
1N
1+!
#240000
0+
0N
0+!
#250000
1+
1N
1+!
#260000
0+
0N
0+!
#270000
1+
1N
1+!
#280000
0+
0N
0+!
#290000
1+
1N
1+!
#300000
0+
0N
0+!
#310000
1+
1N
1+!
#320000
0+
0N
0+!
#330000
1+
1N
1+!
#340000
0+
0N
0+!
#350000
1+
1N
1+!
#360000
0+
0N
0+!
#370000
1+
1N
1+!
#380000
0+
0N
0+!
#390000
1+
1N
1+!
#400000
0+
0N
0+!
#410000
1+
1N
1+!
#420000
0+
0N
0+!
#430000
1+
1N
1+!
#440000
0+
0N
0+!
#450000
1+
1N
1+!
#460000
0+
0N
0+!
#470000
1+
1N
1+!
#480000
0+
0N
0+!
#490000
1+
1N
1+!
#500000
0+
0N
0+!
#510000
1+
1N
1+!
#520000
0+
0N
0+!
#530000
1+
1N
1+!
#540000
0+
0N
0+!
#550000
1+
1N
1+!
#560000
0+
0N
0+!
#570000
1+
1N
1+!
#580000
0+
0N
0+!
#590000
1+
1N
1+!
#600000
0+
0N
0+!
#610000
1+
1N
1+!
#620000
0+
0N
0+!
#630000
1+
1N
1+!
#640000
0+
0N
0+!
#650000
1+
1N
1+!
#660000
0+
0N
0+!
#670000
1+
1N
1+!
#680000
0+
0N
0+!
#690000
1+
1N
1+!
#700000
0+
0N
0+!
#710000
1+
1N
1+!
#720000
0+
0N
0+!
#730000
1+
1N
1+!
#740000
0+
0N
0+!
#750000
1+
1N
1+!
#760000
0+
0N
0+!
#770000
1+
1N
1+!
#780000
0+
0N
0+!
#790000
1+
1N
1+!
#800000
0+
0N
0+!
#810000
1+
1N
1+!
#820000
0+
0N
0+!
#830000
1+
1N
1+!
#840000
0+
0N
0+!
#850000
1+
1N
1+!
#860000
0+
0N
0+!
#870000
1+
1N
1+!
#880000
0+
0N
0+!
#890000
1+
1N
1+!
#900000
0+
0N
0+!
#910000
1+
1N
1+!
#920000
0+
0N
0+!
#930000
1+
1N
1+!
#940000
0+
0N
0+!
#950000
1+
1N
1+!
#960000
0+
0N
0+!
#970000
1+
1N
1+!
#980000
0+
0N
0+!
#990000
1+
1N
1+!
#1000000
