|calculator
CLK => adder_and_subtractor:add.clock
CLK => adder_and_subtractor:sub.clock
CLK => multiplication:multiplication.CLK
CLK => division:division.CLK
CLK => bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.clk_i
RST_N => adder_and_subtractor:add.reset
RST_N => adder_and_subtractor:sub.reset
RST_N => multiplication:multiplication.RST_N
RST_N => division:division.RST_N
RST_N => bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.rst_i
Start => adder_and_subtractor:add.START
Start => adder_and_subtractor:sub.START
Start => multiplication:multiplication.START
Start => division:division.START
Operation[0] => bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.mode[0]
Operation[1] => bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.mode[1]
A[0] => adder_and_subtractor:add.A[0]
A[0] => adder_and_subtractor:sub.A[0]
A[0] => multiplication:multiplication.A[0]
A[0] => division:division.A[0]
A[1] => adder_and_subtractor:add.A[1]
A[1] => adder_and_subtractor:sub.A[1]
A[1] => multiplication:multiplication.A[1]
A[1] => division:division.A[1]
A[2] => adder_and_subtractor:add.A[2]
A[2] => adder_and_subtractor:sub.A[2]
A[2] => multiplication:multiplication.A[2]
A[2] => division:division.A[2]
A[3] => adder_and_subtractor:add.A[3]
A[3] => adder_and_subtractor:sub.A[3]
A[3] => multiplication:multiplication.A[3]
A[3] => division:division.A[3]
A[4] => adder_and_subtractor:add.A[4]
A[4] => adder_and_subtractor:sub.A[4]
A[4] => multiplication:multiplication.A[4]
A[4] => division:division.A[4]
B[0] => adder_and_subtractor:add.B[0]
B[0] => adder_and_subtractor:sub.B[0]
B[0] => multiplication:multiplication.B[0]
B[0] => division:division.B[0]
B[1] => adder_and_subtractor:add.B[1]
B[1] => adder_and_subtractor:sub.B[1]
B[1] => multiplication:multiplication.B[1]
B[1] => division:division.B[1]
B[2] => adder_and_subtractor:add.B[2]
B[2] => adder_and_subtractor:sub.B[2]
B[2] => multiplication:multiplication.B[2]
B[2] => division:division.B[2]
B[3] => adder_and_subtractor:add.B[3]
B[3] => adder_and_subtractor:sub.B[3]
B[3] => multiplication:multiplication.B[3]
B[3] => division:division.B[3]
B[4] => adder_and_subtractor:add.B[4]
B[4] => adder_and_subtractor:sub.B[4]
B[4] => multiplication:multiplication.B[4]
B[4] => division:division.B[4]
Result[0] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Result[0]
Result[1] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Result[1]
Result[2] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Result[2]
Result[3] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Result[3]
Result[4] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Result[4]
Result[5] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Result[5]
Result[6] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Result[6]
Result[7] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Result[7]
Result[8] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Result[8]
Result[9] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Result[9]
Remainder[0] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Remainder[0]
Remainder[1] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Remainder[1]
Remainder[2] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Remainder[2]
Remainder[3] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Remainder[3]
Remainder[4] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Remainder[4]
Remainder[5] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Remainder[5]
Remainder[6] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Remainder[6]
Remainder[7] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Remainder[7]
Remainder[8] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Remainder[8]
Remainder[9] << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Remainder[9]
Done << bcd_2_digit_7_seg_display:BCD_2_digit_7_seg_display.Done


|calculator|adder_and_subtractor:add
clock => ~NO_FANOUT~
reset => ~NO_FANOUT~
START => ~NO_FANOUT~
M => cout.IN0
M => cout.IN0
M => cout.IN0
M => cout.IN0
M => sum.IN0
M => sum.IN1
M => cout.IN1
A[0] => cout.IN1
A[0] => cout.IN1
A[1] => cout.IN1
A[1] => cout.IN1
A[2] => cout.IN1
A[2] => cout.IN1
A[3] => cout.IN1
A[3] => cout.IN1
A[4] => sum.IN1
B[0] => cout.IN1
B[1] => cout.IN1
B[2] => cout.IN1
B[3] => cout.IN1
B[4] => sum.IN1
sum[0] <= sum.DB_MAX_OUTPUT_PORT_TYPE
sum[1] <= sum.DB_MAX_OUTPUT_PORT_TYPE
sum[2] <= sum.DB_MAX_OUTPUT_PORT_TYPE
sum[3] <= sum.DB_MAX_OUTPUT_PORT_TYPE
sum[4] <= sum.DB_MAX_OUTPUT_PORT_TYPE
sum[5] <= <GND>
sum[6] <= <GND>
sum[7] <= <GND>
sum[8] <= <GND>
sum[9] <= <GND>
DONE <= <VCC>


|calculator|adder_and_subtractor:sub
clock => ~NO_FANOUT~
reset => ~NO_FANOUT~
START => ~NO_FANOUT~
M => cout.IN0
M => cout.IN0
M => cout.IN0
M => cout.IN0
M => sum.IN0
M => sum.IN1
M => cout.IN1
A[0] => cout.IN1
A[0] => cout.IN1
A[1] => cout.IN1
A[1] => cout.IN1
A[2] => cout.IN1
A[2] => cout.IN1
A[3] => cout.IN1
A[3] => cout.IN1
A[4] => sum.IN1
B[0] => cout.IN1
B[1] => cout.IN1
B[2] => cout.IN1
B[3] => cout.IN1
B[4] => sum.IN1
sum[0] <= sum.DB_MAX_OUTPUT_PORT_TYPE
sum[1] <= sum.DB_MAX_OUTPUT_PORT_TYPE
sum[2] <= sum.DB_MAX_OUTPUT_PORT_TYPE
sum[3] <= sum.DB_MAX_OUTPUT_PORT_TYPE
sum[4] <= sum.DB_MAX_OUTPUT_PORT_TYPE
sum[5] <= <GND>
sum[6] <= <GND>
sum[7] <= <GND>
sum[8] <= <GND>
sum[9] <= <GND>
DONE <= <VCC>


|calculator|Multiplication:multiplication
CLK => bit_counter[0].CLK
CLK => bit_counter[1].CLK
CLK => bit_counter[2].CLK
CLK => bit_counter[3].CLK
CLK => bit_counter[4].CLK
CLK => bit_counter[5].CLK
CLK => bit_counter[6].CLK
CLK => bit_counter[7].CLK
CLK => bit_counter[8].CLK
CLK => bit_counter[9].CLK
CLK => bit_counter[10].CLK
CLK => bit_counter[11].CLK
CLK => bit_counter[12].CLK
CLK => bit_counter[13].CLK
CLK => bit_counter[14].CLK
CLK => bit_counter[15].CLK
CLK => bit_counter[16].CLK
CLK => bit_counter[17].CLK
CLK => bit_counter[18].CLK
CLK => bit_counter[19].CLK
CLK => bit_counter[20].CLK
CLK => bit_counter[21].CLK
CLK => bit_counter[22].CLK
CLK => bit_counter[23].CLK
CLK => bit_counter[24].CLK
CLK => bit_counter[25].CLK
CLK => bit_counter[26].CLK
CLK => bit_counter[27].CLK
CLK => bit_counter[28].CLK
CLK => bit_counter[29].CLK
CLK => bit_counter[30].CLK
CLK => bit_counter[31].CLK
CLK => DONE~reg0.CLK
CLK => R[0]~reg0.CLK
CLK => R[1]~reg0.CLK
CLK => R[2]~reg0.CLK
CLK => R[3]~reg0.CLK
CLK => R[4]~reg0.CLK
CLK => R[5]~reg0.CLK
CLK => R[6]~reg0.CLK
CLK => R[7]~reg0.CLK
CLK => R[8]~reg0.CLK
CLK => R[9]~reg0.CLK
CLK => Data_Product[0].CLK
CLK => Data_Product[1].CLK
CLK => Data_Product[2].CLK
CLK => Data_Product[3].CLK
CLK => Data_Product[4].CLK
CLK => Data_Product[5].CLK
CLK => Data_Product[6].CLK
CLK => Data_Product[7].CLK
CLK => Data_Product[8].CLK
CLK => Data_Product[9].CLK
CLK => Data_B[0].CLK
CLK => Data_B[1].CLK
CLK => Data_B[2].CLK
CLK => Data_B[3].CLK
CLK => Data_B[4].CLK
CLK => Data_A[0].CLK
CLK => Data_A[1].CLK
CLK => Data_A[2].CLK
CLK => Data_A[3].CLK
CLK => Data_A[4].CLK
CLK => Data_A[5].CLK
CLK => Data_A[6].CLK
CLK => Data_A[7].CLK
CLK => Data_A[8].CLK
CLK => Data_A[9].CLK
CLK => state.CLK
RST_N => R[0]~reg0.ACLR
RST_N => R[1]~reg0.ACLR
RST_N => R[2]~reg0.ACLR
RST_N => R[3]~reg0.ACLR
RST_N => R[4]~reg0.ACLR
RST_N => R[5]~reg0.ACLR
RST_N => R[6]~reg0.ACLR
RST_N => R[7]~reg0.ACLR
RST_N => R[8]~reg0.ACLR
RST_N => R[9]~reg0.ACLR
RST_N => Data_Product[0].ACLR
RST_N => Data_Product[1].ACLR
RST_N => Data_Product[2].ACLR
RST_N => Data_Product[3].ACLR
RST_N => Data_Product[4].ACLR
RST_N => Data_Product[5].ACLR
RST_N => Data_Product[6].ACLR
RST_N => Data_Product[7].ACLR
RST_N => Data_Product[8].ACLR
RST_N => Data_Product[9].ACLR
RST_N => Data_B[0].ACLR
RST_N => Data_B[1].ACLR
RST_N => Data_B[2].ACLR
RST_N => Data_B[3].ACLR
RST_N => Data_B[4].ACLR
RST_N => Data_A[0].ACLR
RST_N => Data_A[1].ACLR
RST_N => Data_A[2].ACLR
RST_N => Data_A[3].ACLR
RST_N => Data_A[4].ACLR
RST_N => Data_A[5].ACLR
RST_N => Data_A[6].ACLR
RST_N => Data_A[7].ACLR
RST_N => Data_A[8].ACLR
RST_N => Data_A[9].ACLR
RST_N => state.ACLR
RST_N => bit_counter[0].ENA
RST_N => DONE~reg0.ENA
RST_N => bit_counter[31].ENA
RST_N => bit_counter[30].ENA
RST_N => bit_counter[29].ENA
RST_N => bit_counter[28].ENA
RST_N => bit_counter[27].ENA
RST_N => bit_counter[26].ENA
RST_N => bit_counter[25].ENA
RST_N => bit_counter[24].ENA
RST_N => bit_counter[23].ENA
RST_N => bit_counter[22].ENA
RST_N => bit_counter[21].ENA
RST_N => bit_counter[20].ENA
RST_N => bit_counter[19].ENA
RST_N => bit_counter[18].ENA
RST_N => bit_counter[17].ENA
RST_N => bit_counter[16].ENA
RST_N => bit_counter[15].ENA
RST_N => bit_counter[14].ENA
RST_N => bit_counter[13].ENA
RST_N => bit_counter[12].ENA
RST_N => bit_counter[11].ENA
RST_N => bit_counter[10].ENA
RST_N => bit_counter[9].ENA
RST_N => bit_counter[8].ENA
RST_N => bit_counter[7].ENA
RST_N => bit_counter[6].ENA
RST_N => bit_counter[5].ENA
RST_N => bit_counter[4].ENA
RST_N => bit_counter[3].ENA
RST_N => bit_counter[2].ENA
RST_N => bit_counter[1].ENA
START => Data_A.OUTPUTSELECT
START => Data_A.OUTPUTSELECT
START => Data_A.OUTPUTSELECT
START => Data_A.OUTPUTSELECT
START => Data_A.OUTPUTSELECT
START => Data_B.OUTPUTSELECT
START => Data_B.OUTPUTSELECT
START => Data_B.OUTPUTSELECT
START => Data_B.OUTPUTSELECT
START => Data_B.OUTPUTSELECT
START => DONE.OUTPUTSELECT
START => state.DATAB
A[0] => Data_A.DATAB
A[1] => Data_A.DATAB
A[2] => Data_A.DATAB
A[3] => Data_A.DATAB
A[4] => Data_A.DATAB
B[0] => Data_B.DATAB
B[1] => Data_B.DATAB
B[2] => Data_B.DATAB
B[3] => Data_B.DATAB
B[4] => Data_B.DATAB
R[0] <= R[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[1] <= R[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[2] <= R[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[3] <= R[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[4] <= R[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[5] <= R[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[6] <= R[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[7] <= R[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[8] <= R[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[9] <= R[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DONE <= DONE~reg0.DB_MAX_OUTPUT_PORT_TYPE


|calculator|division:division
CLK => bit_counter[0].CLK
CLK => bit_counter[1].CLK
CLK => bit_counter[2].CLK
CLK => bit_counter[3].CLK
CLK => bit_counter[4].CLK
CLK => bit_counter[5].CLK
CLK => bit_counter[6].CLK
CLK => bit_counter[7].CLK
CLK => bit_counter[8].CLK
CLK => bit_counter[9].CLK
CLK => bit_counter[10].CLK
CLK => bit_counter[11].CLK
CLK => bit_counter[12].CLK
CLK => bit_counter[13].CLK
CLK => bit_counter[14].CLK
CLK => bit_counter[15].CLK
CLK => bit_counter[16].CLK
CLK => bit_counter[17].CLK
CLK => bit_counter[18].CLK
CLK => bit_counter[19].CLK
CLK => bit_counter[20].CLK
CLK => bit_counter[21].CLK
CLK => bit_counter[22].CLK
CLK => bit_counter[23].CLK
CLK => bit_counter[24].CLK
CLK => bit_counter[25].CLK
CLK => bit_counter[26].CLK
CLK => bit_counter[27].CLK
CLK => bit_counter[28].CLK
CLK => bit_counter[29].CLK
CLK => bit_counter[30].CLK
CLK => bit_counter[31].CLK
CLK => DONE~reg0.CLK
CLK => R[0]~reg0.CLK
CLK => R[1]~reg0.CLK
CLK => R[2]~reg0.CLK
CLK => R[3]~reg0.CLK
CLK => R[4]~reg0.CLK
CLK => R[5]~reg0.CLK
CLK => R[6]~reg0.CLK
CLK => R[7]~reg0.CLK
CLK => R[8]~reg0.CLK
CLK => R[9]~reg0.CLK
CLK => Q[0]~reg0.CLK
CLK => Q[1]~reg0.CLK
CLK => Q[2]~reg0.CLK
CLK => Q[3]~reg0.CLK
CLK => Q[4]~reg0.CLK
CLK => Q[5]~reg0.CLK
CLK => Q[6]~reg0.CLK
CLK => Q[7]~reg0.CLK
CLK => Q[8]~reg0.CLK
CLK => Q[9]~reg0.CLK
CLK => Data_Quotient[0].CLK
CLK => Data_Quotient[1].CLK
CLK => Data_Quotient[2].CLK
CLK => Data_Quotient[3].CLK
CLK => Data_Quotient[4].CLK
CLK => Data_Quotient[5].CLK
CLK => Data_Quotient[6].CLK
CLK => Data_Quotient[7].CLK
CLK => Data_Quotient[8].CLK
CLK => Data_Quotient[9].CLK
CLK => Data_B[0].CLK
CLK => Data_B[1].CLK
CLK => Data_B[2].CLK
CLK => Data_B[3].CLK
CLK => Data_B[4].CLK
CLK => Data_B[5].CLK
CLK => Data_B[6].CLK
CLK => Data_B[7].CLK
CLK => Data_B[8].CLK
CLK => Data_B[9].CLK
CLK => Data_A[0].CLK
CLK => Data_A[1].CLK
CLK => Data_A[2].CLK
CLK => Data_A[3].CLK
CLK => Data_A[4].CLK
CLK => Data_A[5].CLK
CLK => Data_A[6].CLK
CLK => Data_A[7].CLK
CLK => Data_A[8].CLK
CLK => Data_A[9].CLK
CLK => state~1.DATAIN
RST_N => R[0]~reg0.ACLR
RST_N => R[1]~reg0.ACLR
RST_N => R[2]~reg0.ACLR
RST_N => R[3]~reg0.ACLR
RST_N => R[4]~reg0.ACLR
RST_N => R[5]~reg0.ACLR
RST_N => R[6]~reg0.ACLR
RST_N => R[7]~reg0.ACLR
RST_N => R[8]~reg0.ACLR
RST_N => R[9]~reg0.ACLR
RST_N => Q[0]~reg0.ACLR
RST_N => Q[1]~reg0.ACLR
RST_N => Q[2]~reg0.ACLR
RST_N => Q[3]~reg0.ACLR
RST_N => Q[4]~reg0.ACLR
RST_N => Q[5]~reg0.ACLR
RST_N => Q[6]~reg0.ACLR
RST_N => Q[7]~reg0.ACLR
RST_N => Q[8]~reg0.ACLR
RST_N => Q[9]~reg0.ACLR
RST_N => Data_Quotient[0].ACLR
RST_N => Data_Quotient[1].ACLR
RST_N => Data_Quotient[2].ACLR
RST_N => Data_Quotient[3].ACLR
RST_N => Data_Quotient[4].ACLR
RST_N => Data_Quotient[5].ACLR
RST_N => Data_Quotient[6].ACLR
RST_N => Data_Quotient[7].ACLR
RST_N => Data_Quotient[8].ACLR
RST_N => Data_Quotient[9].ACLR
RST_N => Data_B[0].ACLR
RST_N => Data_B[1].ACLR
RST_N => Data_B[2].ACLR
RST_N => Data_B[3].ACLR
RST_N => Data_B[4].ACLR
RST_N => Data_B[5].ACLR
RST_N => Data_B[6].ACLR
RST_N => Data_B[7].ACLR
RST_N => Data_B[8].ACLR
RST_N => Data_B[9].ACLR
RST_N => Data_A[0].ACLR
RST_N => Data_A[1].ACLR
RST_N => Data_A[2].ACLR
RST_N => Data_A[3].ACLR
RST_N => Data_A[4].ACLR
RST_N => Data_A[5].ACLR
RST_N => Data_A[6].ACLR
RST_N => Data_A[7].ACLR
RST_N => Data_A[8].ACLR
RST_N => Data_A[9].ACLR
RST_N => state~3.DATAIN
RST_N => bit_counter[0].ENA
RST_N => DONE~reg0.ENA
RST_N => bit_counter[31].ENA
RST_N => bit_counter[30].ENA
RST_N => bit_counter[29].ENA
RST_N => bit_counter[28].ENA
RST_N => bit_counter[27].ENA
RST_N => bit_counter[26].ENA
RST_N => bit_counter[25].ENA
RST_N => bit_counter[24].ENA
RST_N => bit_counter[23].ENA
RST_N => bit_counter[22].ENA
RST_N => bit_counter[21].ENA
RST_N => bit_counter[20].ENA
RST_N => bit_counter[19].ENA
RST_N => bit_counter[18].ENA
RST_N => bit_counter[17].ENA
RST_N => bit_counter[16].ENA
RST_N => bit_counter[15].ENA
RST_N => bit_counter[14].ENA
RST_N => bit_counter[13].ENA
RST_N => bit_counter[12].ENA
RST_N => bit_counter[11].ENA
RST_N => bit_counter[10].ENA
RST_N => bit_counter[9].ENA
RST_N => bit_counter[8].ENA
RST_N => bit_counter[7].ENA
RST_N => bit_counter[6].ENA
RST_N => bit_counter[5].ENA
RST_N => bit_counter[4].ENA
RST_N => bit_counter[3].ENA
RST_N => bit_counter[2].ENA
RST_N => bit_counter[1].ENA
START => Data_A.OUTPUTSELECT
START => Data_A.OUTPUTSELECT
START => Data_A.OUTPUTSELECT
START => Data_A.OUTPUTSELECT
START => Data_A.OUTPUTSELECT
START => Data_B.OUTPUTSELECT
START => Data_B.OUTPUTSELECT
START => Data_B.OUTPUTSELECT
START => Data_B.OUTPUTSELECT
START => Data_B.OUTPUTSELECT
START => DONE.OUTPUTSELECT
START => Selector21.IN5
START => Selector20.IN1
A[0] => Data_A.DATAB
A[1] => Data_A.DATAB
A[2] => Data_A.DATAB
A[3] => Data_A.DATAB
A[4] => Data_A.DATAB
B[0] => Data_B.DATAB
B[1] => Data_B.DATAB
B[2] => Data_B.DATAB
B[3] => Data_B.DATAB
B[4] => Data_B.DATAB
Q[0] <= Q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= Q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= Q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= Q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= Q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= Q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= Q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= Q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[8] <= Q[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[9] <= Q[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[0] <= R[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[1] <= R[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[2] <= R[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[3] <= R[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[4] <= R[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[5] <= R[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[6] <= R[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[7] <= R[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[8] <= R[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[9] <= R[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DONE <= DONE~reg0.DB_MAX_OUTPUT_PORT_TYPE


|calculator|BCD_2_digit_7_seg_display:BCD_2_digit_7_seg_display
clk_i => Remainder[0]~reg0.CLK
clk_i => Remainder[1]~reg0.CLK
clk_i => Remainder[2]~reg0.CLK
clk_i => Remainder[3]~reg0.CLK
clk_i => Remainder[4]~reg0.CLK
clk_i => Remainder[5]~reg0.CLK
clk_i => Remainder[6]~reg0.CLK
clk_i => Remainder[7]~reg0.CLK
clk_i => Remainder[8]~reg0.CLK
clk_i => Remainder[9]~reg0.CLK
clk_i => Done~reg0.CLK
clk_i => Result[0]~reg0.CLK
clk_i => Result[1]~reg0.CLK
clk_i => Result[2]~reg0.CLK
clk_i => Result[3]~reg0.CLK
clk_i => Result[4]~reg0.CLK
clk_i => Result[5]~reg0.CLK
clk_i => Result[6]~reg0.CLK
clk_i => Result[7]~reg0.CLK
clk_i => Result[8]~reg0.CLK
clk_i => Result[9]~reg0.CLK
clk_i => int_data_2[0].CLK
clk_i => int_data_2[1].CLK
clk_i => int_data_2[2].CLK
clk_i => int_data_2[3].CLK
clk_i => int_data_2[4].CLK
clk_i => int_data_2[5].CLK
clk_i => int_data_2[6].CLK
clk_i => int_data_2[7].CLK
clk_i => int_data_2[8].CLK
clk_i => int_data_2[9].CLK
clk_i => int_data_1[0].CLK
clk_i => int_data_1[1].CLK
clk_i => int_data_1[2].CLK
clk_i => int_data_1[3].CLK
clk_i => int_data_1[4].CLK
clk_i => int_data_1[5].CLK
clk_i => int_data_1[6].CLK
clk_i => int_data_1[7].CLK
clk_i => int_data_1[8].CLK
clk_i => int_data_1[9].CLK
rst_i => int_data_2[0].ACLR
rst_i => int_data_2[1].ACLR
rst_i => int_data_2[2].ACLR
rst_i => int_data_2[3].ACLR
rst_i => int_data_2[4].ACLR
rst_i => int_data_2[5].ACLR
rst_i => int_data_2[6].ACLR
rst_i => int_data_2[7].ACLR
rst_i => int_data_2[8].ACLR
rst_i => int_data_2[9].ACLR
rst_i => int_data_1[0].ACLR
rst_i => int_data_1[1].ACLR
rst_i => int_data_1[2].ACLR
rst_i => int_data_1[3].ACLR
rst_i => int_data_1[4].ACLR
rst_i => int_data_1[5].ACLR
rst_i => int_data_1[6].ACLR
rst_i => int_data_1[7].ACLR
rst_i => int_data_1[8].ACLR
rst_i => int_data_1[9].ACLR
rst_i => Remainder[0]~reg0.ENA
rst_i => Result[9]~reg0.ENA
rst_i => Result[8]~reg0.ENA
rst_i => Result[7]~reg0.ENA
rst_i => Result[6]~reg0.ENA
rst_i => Result[5]~reg0.ENA
rst_i => Result[4]~reg0.ENA
rst_i => Result[3]~reg0.ENA
rst_i => Result[2]~reg0.ENA
rst_i => Result[1]~reg0.ENA
rst_i => Result[0]~reg0.ENA
rst_i => Done~reg0.ENA
rst_i => Remainder[9]~reg0.ENA
rst_i => Remainder[8]~reg0.ENA
rst_i => Remainder[7]~reg0.ENA
rst_i => Remainder[6]~reg0.ENA
rst_i => Remainder[5]~reg0.ENA
rst_i => Remainder[4]~reg0.ENA
rst_i => Remainder[3]~reg0.ENA
rst_i => Remainder[2]~reg0.ENA
rst_i => Remainder[1]~reg0.ENA
overflow => ~NO_FANOUT~
mode[0] => Mux0.IN1
mode[0] => Mux1.IN1
mode[0] => Mux2.IN1
mode[0] => Mux3.IN1
mode[0] => Mux4.IN1
mode[0] => Mux5.IN1
mode[0] => Mux6.IN1
mode[0] => Mux7.IN1
mode[0] => Mux8.IN1
mode[0] => Mux9.IN1
mode[0] => Mux10.IN1
mode[0] => Mux11.IN5
mode[0] => Mux12.IN5
mode[0] => Mux13.IN5
mode[0] => Mux14.IN5
mode[0] => Mux15.IN5
mode[0] => Mux16.IN5
mode[0] => Mux17.IN5
mode[0] => Mux18.IN5
mode[0] => Mux19.IN5
mode[0] => Mux20.IN5
mode[0] => Mux21.IN5
mode[0] => Mux22.IN5
mode[0] => Mux23.IN5
mode[0] => Mux24.IN5
mode[0] => Mux25.IN5
mode[0] => Mux26.IN5
mode[0] => Mux27.IN5
mode[0] => Mux28.IN5
mode[0] => Mux29.IN5
mode[0] => Mux30.IN5
mode[0] => Mux31.IN1
mode[0] => Mux32.IN1
mode[0] => Mux33.IN1
mode[0] => Mux34.IN1
mode[0] => Mux35.IN1
mode[0] => Mux36.IN1
mode[0] => Mux37.IN1
mode[0] => Mux38.IN1
mode[0] => Mux39.IN1
mode[0] => Mux40.IN1
mode[1] => Mux0.IN0
mode[1] => Mux1.IN0
mode[1] => Mux2.IN0
mode[1] => Mux3.IN0
mode[1] => Mux4.IN0
mode[1] => Mux5.IN0
mode[1] => Mux6.IN0
mode[1] => Mux7.IN0
mode[1] => Mux8.IN0
mode[1] => Mux9.IN0
mode[1] => Mux10.IN0
mode[1] => Mux11.IN4
mode[1] => Mux12.IN4
mode[1] => Mux13.IN4
mode[1] => Mux14.IN4
mode[1] => Mux15.IN4
mode[1] => Mux16.IN4
mode[1] => Mux17.IN4
mode[1] => Mux18.IN4
mode[1] => Mux19.IN4
mode[1] => Mux20.IN4
mode[1] => Mux21.IN4
mode[1] => Mux22.IN4
mode[1] => Mux23.IN4
mode[1] => Mux24.IN4
mode[1] => Mux25.IN4
mode[1] => Mux26.IN4
mode[1] => Mux27.IN4
mode[1] => Mux28.IN4
mode[1] => Mux29.IN4
mode[1] => Mux30.IN4
mode[1] => Mux31.IN0
mode[1] => Mux32.IN0
mode[1] => Mux33.IN0
mode[1] => Mux34.IN0
mode[1] => Mux35.IN0
mode[1] => Mux36.IN0
mode[1] => Mux37.IN0
mode[1] => Mux38.IN0
mode[1] => Mux39.IN0
mode[1] => Mux40.IN0
result_add[0] => Mod0.IN19
result_add[0] => Div0.IN13
result_add[0] => Mux9.IN2
result_add[1] => Mod0.IN18
result_add[1] => Div0.IN12
result_add[1] => Mux8.IN2
result_add[2] => Mod0.IN17
result_add[2] => Div0.IN11
result_add[2] => Mux7.IN2
result_add[3] => Mod0.IN16
result_add[3] => Div0.IN10
result_add[3] => Mux6.IN2
result_add[4] => Mod0.IN15
result_add[4] => Div0.IN9
result_add[4] => Mux5.IN2
result_add[5] => Mod0.IN14
result_add[5] => Div0.IN8
result_add[5] => Mux4.IN2
result_add[6] => Mod0.IN13
result_add[6] => Div0.IN7
result_add[6] => Mux3.IN2
result_add[7] => Mod0.IN12
result_add[7] => Div0.IN6
result_add[7] => Mux2.IN2
result_add[8] => Mod0.IN11
result_add[8] => Div0.IN5
result_add[8] => Mux1.IN2
result_add[9] => Mod0.IN10
result_add[9] => Div0.IN4
result_add[9] => Mux0.IN2
result_sub[0] => Mod1.IN19
result_sub[0] => Div1.IN13
result_sub[0] => Mux9.IN3
result_sub[1] => Mod1.IN18
result_sub[1] => Div1.IN12
result_sub[1] => Mux8.IN3
result_sub[2] => Mod1.IN17
result_sub[2] => Div1.IN11
result_sub[2] => Mux7.IN3
result_sub[3] => Mod1.IN16
result_sub[3] => Div1.IN10
result_sub[3] => Mux6.IN3
result_sub[4] => Mod1.IN15
result_sub[4] => Div1.IN9
result_sub[4] => Mux5.IN3
result_sub[5] => Mod1.IN14
result_sub[5] => Div1.IN8
result_sub[5] => Mux4.IN3
result_sub[6] => Mod1.IN13
result_sub[6] => Div1.IN7
result_sub[6] => Mux3.IN3
result_sub[7] => Mod1.IN12
result_sub[7] => Div1.IN6
result_sub[7] => Mux2.IN3
result_sub[8] => Mod1.IN11
result_sub[8] => Div1.IN5
result_sub[8] => Mux1.IN3
result_sub[9] => Mod1.IN10
result_sub[9] => Div1.IN4
result_sub[9] => Mux0.IN3
result_multi[0] => Mod2.IN19
result_multi[0] => Div2.IN13
result_multi[0] => Mux9.IN4
result_multi[1] => Mod2.IN18
result_multi[1] => Div2.IN12
result_multi[1] => Mux8.IN4
result_multi[2] => Mod2.IN17
result_multi[2] => Div2.IN11
result_multi[2] => Mux7.IN4
result_multi[3] => Mod2.IN16
result_multi[3] => Div2.IN10
result_multi[3] => Mux6.IN4
result_multi[4] => Mod2.IN15
result_multi[4] => Div2.IN9
result_multi[4] => Mux5.IN4
result_multi[5] => Mod2.IN14
result_multi[5] => Div2.IN8
result_multi[5] => Mux4.IN4
result_multi[6] => Mod2.IN13
result_multi[6] => Div2.IN7
result_multi[6] => Mux3.IN4
result_multi[7] => Mod2.IN12
result_multi[7] => Div2.IN6
result_multi[7] => Mux2.IN4
result_multi[8] => Mod2.IN11
result_multi[8] => Div2.IN5
result_multi[8] => Mux1.IN4
result_multi[9] => Mod2.IN10
result_multi[9] => Div2.IN4
result_multi[9] => Mux0.IN4
result_division[0] => Mod3.IN19
result_division[0] => Div3.IN13
result_division[0] => Mux9.IN5
result_division[1] => Mod3.IN18
result_division[1] => Div3.IN12
result_division[1] => Mux8.IN5
result_division[2] => Mod3.IN17
result_division[2] => Div3.IN11
result_division[2] => Mux7.IN5
result_division[3] => Mod3.IN16
result_division[3] => Div3.IN10
result_division[3] => Mux6.IN5
result_division[4] => Mod3.IN15
result_division[4] => Div3.IN9
result_division[4] => Mux5.IN5
result_division[5] => Mod3.IN14
result_division[5] => Div3.IN8
result_division[5] => Mux4.IN5
result_division[6] => Mod3.IN13
result_division[6] => Div3.IN7
result_division[6] => Mux3.IN5
result_division[7] => Mod3.IN12
result_division[7] => Div3.IN6
result_division[7] => Mux2.IN5
result_division[8] => Mod3.IN11
result_division[8] => Div3.IN5
result_division[8] => Mux1.IN5
result_division[9] => Mod3.IN10
result_division[9] => Div3.IN4
result_division[9] => Mux0.IN5
Done_add => Mux10.IN2
Done_sub => Mux10.IN3
Done_multi => Mux10.IN4
Done_division => Mux10.IN5
Done <= Done~reg0.DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_1[0] <= int_data_1[0].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_1[1] <= int_data_1[1].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_1[2] <= int_data_1[2].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_1[3] <= int_data_1[3].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_1[4] <= int_data_1[4].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_1[5] <= int_data_1[5].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_1[6] <= int_data_1[6].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_1[7] <= int_data_1[7].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_1[8] <= int_data_1[8].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_1[9] <= int_data_1[9].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_2[0] <= int_data_2[0].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_2[1] <= int_data_2[1].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_2[2] <= int_data_2[2].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_2[3] <= int_data_2[3].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_2[4] <= int_data_2[4].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_2[5] <= int_data_2[5].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_2[6] <= int_data_2[6].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_2[7] <= int_data_2[7].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_2[8] <= int_data_2[8].DB_MAX_OUTPUT_PORT_TYPE
BCD_digit_2[9] <= int_data_2[9].DB_MAX_OUTPUT_PORT_TYPE
Result[0] <= Result[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Result[1] <= Result[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Result[2] <= Result[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Result[3] <= Result[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Result[4] <= Result[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Result[5] <= Result[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Result[6] <= Result[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Result[7] <= Result[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Result[8] <= Result[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Result[9] <= Result[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Remainder_division[0] => Mux40.IN2
Remainder_division[1] => Mux39.IN2
Remainder_division[2] => Mux38.IN2
Remainder_division[3] => Mux37.IN2
Remainder_division[4] => Mux36.IN2
Remainder_division[5] => Mux35.IN2
Remainder_division[6] => Mux34.IN2
Remainder_division[7] => Mux33.IN2
Remainder_division[8] => Mux32.IN2
Remainder_division[9] => Mux31.IN2
Remainder[0] <= Remainder[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Remainder[1] <= Remainder[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Remainder[2] <= Remainder[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Remainder[3] <= Remainder[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Remainder[4] <= Remainder[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Remainder[5] <= Remainder[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Remainder[6] <= Remainder[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Remainder[7] <= Remainder[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Remainder[8] <= Remainder[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Remainder[9] <= Remainder[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


